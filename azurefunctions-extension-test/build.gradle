/*
 * Copyright (c) 2020   , WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

apply from: "$rootDir/gradle/javaProject.gradle"

configurations {
    bDistributionDir
    azureFunctionsExtensionPlugin
}

dependencies {
    implementation project(':azurefunctions-extension')

    testImplementation "org.ballerinalang:ballerina-lang:${ballerinaLangVersion}"
    testImplementation "org.ballerinalang:ballerina-core:${ballerinaLangVersion}"
    testImplementation "org.ballerinalang:ballerina-parser:${ballerinaLangVersion}"
    testImplementation "org.ballerinalang:ballerina-tools-api:${ballerinaLangVersion}"
    testImplementation "org.testng:testng:${testngVersion}"
    testImplementation "commons-io:commons-io:${commomsIOVersion}"
    testImplementation "commons-logging:commons-logging:${commonsLoggingVersion}"
    testImplementation "org.slf4j:slf4j-log4j12:${slf4jVersion}"

    azureFunctionsExtensionPlugin project(":azurefunctions-extension")
    bDistributionDir project(path: ":azurefunctions-extension-bala", configuration: "bDistributionDir")
}

description = 'Ballerinax - Azure Functions Extension Tests'

def distributionLocation = configurations.bDistributionDir.singleFile

test {
    dependsOn(":azurefunctions-extension-bala:ballerinaBuild")
    useTestNG() {
        suites 'src/test/resources/testng.xml'
        systemProperties = [
            "ballerina.home": System.getProperty('ballerina.home', distributionLocation.absolutePath),
            sampleDir: System.getProperty('sampleDir', project.projectDir.absolutePath + "/../samples"),
            jacocoAgentLine: "-javaagent:${configurations.jacocoRuntime.asPath}=destfile=${test.jacoco.destinationFile.absolutePath},append=true,inclnolocationclasses=true,exclclassloader=jdk.internal.reflect.DelegatingClassLoader"
        ]
	}
}

// Disable publishing artifacts
tasks.withType(PublishToMavenRepository) {
    enabled = false
}
tasks.withType(PublishToMavenLocal) {
    enabled = false
}
